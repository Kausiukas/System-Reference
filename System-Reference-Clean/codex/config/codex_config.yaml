# Codex Analysis Configuration

# Analysis Parameters
analysis:
  # Repository Information
  repository:
    url: "https://github.com/Kausiukas/System-Reference"
    branch: "cloud"
    working_directory: "/workspace/System-Reference"
  
  # Analysis Scope
  scope:
    include_patterns:
      - "src/**/*.py"
      - "config/**/*.yaml"
      - "config/**/*.yml"
      - "scripts/**/*.py"
      - "docs/**/*.md"
      - "*.md"
      - "requirements.txt"
      - ".streamlit/config.toml"
    
    exclude_patterns:
      - "**/__pycache__/**"
      - "**/*.pyc"
      - "**/*.pyo"
      - "**/*.pyd"
      - "**/.git/**"
      - "**/venv/**"
      - "**/node_modules/**"
      - "**/*.log"
      - "**/temp/**"
      - "**/tmp/**"
  
  # Analysis Tools
  tools:
    code_quality:
      - pylint
      - flake8
      - mypy
      - radon
      - bandit
    
    security:
      - bandit
      - safety
      - semgrep
    
    performance:
      - memory-profiler
      - line-profiler
      - cProfile
    
    documentation:
      - pydocstyle
      - doc8

# Output Configuration
output:
  # Output Directory Structure
  directories:
    analysis_reports: "outputs/analysis_reports"
    improvement_plans: "outputs/improvement_plans"
    code_suggestions: "outputs/code_suggestions"
    security_findings: "outputs/security_findings"
    performance_reports: "outputs/performance_reports"
    documentation_reviews: "outputs/documentation_reviews"
    integration_plans: "outputs/integration_plans"
  
  # File Naming Convention
  naming:
    pattern: "{category}_{date}_{description}.md"
    date_format: "YYYY-MM-DD"
    timestamp_format: "YYYY-MM-DD_HH-MM-SS"
  
  # Report Templates
  templates:
    analysis_report: "templates/analysis_report.md"
    improvement_plan: "templates/improvement_plan.md"
    code_suggestion: "templates/code_suggestion.md"
    security_finding: "templates/security_finding.md"
    performance_report: "templates/performance_report.md"
    documentation_review: "templates/documentation_review.md"
    integration_plan: "templates/integration_plan.md"

# Shared State Configuration
shared_state:
  # State Management
  manager:
    class: "src.utils.shared_state_manager.SharedStateManager"
    config_file: "../config/shared_state_config.yaml"
  
  # State Categories
  categories:
    - code_quality
    - security
    - performance
    - documentation
    - architecture
    - deployment
    - integration
  
  # Update Intervals (seconds)
  update_intervals:
    code_quality: 300
    security: 600
    performance: 300
    documentation: 1800
    architecture: 3600
    deployment: 1800
    integration: 900

# Analysis Thresholds
thresholds:
  # Code Quality Scores (0-100)
  code_quality:
    excellent: 90
    good: 80
    acceptable: 70
    needs_improvement: 60
    critical: 50
  
  # Security Risk Levels
  security:
    low: 1
    medium: 3
    high: 5
    critical: 7
  
  # Performance Metrics
  performance:
    startup_time_max: 5.0  # seconds
    memory_usage_max: 512  # MB
    response_time_max: 2.0  # seconds
  
  # Documentation Coverage
  documentation:
    minimum_coverage: 80  # percentage
    docstring_coverage: 90  # percentage
    readme_completeness: 85  # percentage

# Integration Settings
integration:
  # GitHub Integration
  github:
    repository: "Kausiukas/System-Reference"
    branch: "cloud"
    auto_commit: true
    commit_message_template: "Codex analysis: {category} - {description}"
  
  # Streamlit Cloud Integration
  streamlit:
    app_file: "src/main.py"
    config_file: ".streamlit/config.toml"
    requirements_file: "requirements.txt"
  
  # Automated Workflows
  workflows:
    analysis_trigger: "manual"
    output_processing: "automatic"
    state_sync: "automatic"
    deployment_trigger: "manual"

# Logging Configuration
logging:
  level: "INFO"
  file: "codex_analysis.log"
  max_size: "10MB"
  backup_count: 5
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Performance Configuration
performance:
  max_analysis_time: 3600  # seconds
  parallel_processing: true
  max_workers: 4
  timeout: 300  # seconds per analysis

# Error Handling
error_handling:
  max_retries: 3
  retry_delay: 5  # seconds
  continue_on_error: true
  rollback_on_failure: false
  log_errors: true 